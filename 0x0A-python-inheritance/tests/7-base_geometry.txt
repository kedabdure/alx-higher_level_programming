Using ``base_geometry`` module
==============================

use ``integer_validator`` methode to check if the value is integer

importing the module:

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    >>> type(bg)
    <class '7-base_geometry.BaseGeometry'>

passing string:

::

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

passing number grater than 0:

::

    >>> bg.integer_validator("age", 6)
    >>>

passing zero:

::

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0


passing less than zero value:

::

    >>> bg.integer_validator("age", -5)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0

::

Pass a floating-point number as `value

::

    >>> bg.integer_validator("age", 6.7)
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

Pass a boolean value as `value`
::

    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

passing None:

::

    >>> bg.integer_validator("distance", None)
    Traceback (most recent call last):
        ...
    TypeError: distance must be an integer

Pass both `name` and `value` as `None

::

    >>> bg.integer_validator(None, None)
    Traceback (most recent call last):
        ...
    TypeError: None must be an integer

Pass a complex number as `value`

::

    >>> bg.integer_validator("distance", 5j)
    Traceback (most recent call last):
        ...
    TypeError: distance must be an integer


passing only one argument:

::

    >>> bg.integer_validator("distance")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

passing no argument:

::

    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

passing no None:

::

    >>> bg.integer_validator(None)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

passing tuple:

::

    >>> bg.integer_validator("age", (6, 1))
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

passing list:

::

    >>> bg.integer_validator("age", [5, 7])
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

passing list:

::

    >>> bg.integer_validator("age", {4, 4})
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

passing none:

::

    >>> bg = BaseGeometry(None)
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry() takes no arguments

::
